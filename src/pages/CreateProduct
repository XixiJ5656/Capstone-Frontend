import React, { useState, useRef } from "react";
import Form from "react-validation/build/form";
import Input from "react-validation/build/input";
import CheckButton from "react-validation/build/button";
import { useDispatch, useSelector } from "react-redux";
import { Link } from "react-router-dom";
import "./Shop.css";
import authActions from "../actions/authActions";

const required = (value) => {
  if (!value) {
    return (
      <div className="alert alert-warning" role="alert">
        Required Information!
      </div>
    );
  }
};

const CreateProduct = (props) => {
  console.log(props);
  const [name, setName] = useState("");
  const [inventory, setInventory] = useState(0);
  const [type, setType] = useState("");
  const [price, setPrice] = useState(0);
  const [size, setSize] = useState([]);
  const [color, setColor] = useState([]);
  const [description, setDescription] = useState("");
  const [image, setImage] = useState([]);

  const [successful, setSuccessful] = useState(false);
  const { message } = useSelector((state) => state.message);
  const dispatch = useDispatch();
  const form = useRef();
  const checkButton = useRef();

  const handleName = (e) => {
    const name = e.target.value;
    setName(name);
  };

  const handleInventory = (e) => {
    const inventory = e.target.value;
    setInventory(inventory);
  };

  const handleType = (e) => {
    const type = e.target.value;
    setType(type);
  };

  const handlePrice = (e) => {
    const price = e.target.value;
    setPrice(price);
  };

  const handleSize = (e) => {
    const size = e.target.value;
    setSize(size);
  };

  const handleColor = (e) => {
    const color = e.target.value;
    setColor(color);
  };

  const handleDescription = (e) => {
    const description = e.target.value;
    setDescription(description);
  };

  const handleImage = (e) => {
    const iamge = e.target.value;
    setImage(image);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setSuccessful(false);

    form.current.validateAll();

    if (checkButton.current.context._errors.length === 0) {
      dispatch(authActions.register(username, email, password))
        .then(() => {
          setSuccessful(true);
        })
        .catch(() => {
          setSuccessful(false);
        });
    }
  };
  return (
    <div className="create-product-page">
      <Form className="product-from" onSubmit={handleSubmit} ref={form}>
        {!successful && (
          <ul>
            <li>ADD NEW PRODUCT</li>
            <li>
              <label htmlFor="username">Username</label>
              <Input
                type="text"
                className="form-control"
                name="username"
                value={username}
                onChange={handleUsername}
                validations={[required, validateUername]}
              />
            </li>
            <li>
              <label htmlFor="email">Email</label>
              <Input
                type="text"
                className="form-control"
                name="email"
                value={email}
                onChange={handleEmail}
                validations={[required, validateEmail]}
              />
            </li>
            <li>
              <label htmlFor="password">Password</label>
              <Input
                type="password"
                className="form-control"
                name="password"
                value={password}
                onChange={handlePassword}
                validations={[required, validatePassword]}
              />
            </li>
            <li>
              <button className="btn btn-info btn-block rounded-pill">
                REGISTER
              </button>
            </li>
          </ul>
        )}

        {message && (
          <div className="form-group">
            <div
              className={
                successful ? "alert alert-success" : "alert alert-danger"
              }
              role="alert"
            >
              {message}
            </div>
          </div>
        )}
        <CheckButton style={{ display: "none" }} ref={checkButton} />
        <div>ALREADY HAVE AN ACCOUNT, PLEASE SIGN IN HERE</div>
        <Link to="/signin">
          <button>Sign In</button>
        </Link>
      </Form>
    </div>
  );
};

export default CreateProduct;
